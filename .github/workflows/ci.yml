name: ci
on: 
  push:
    branches:
      - dev
      - test
  pull_request:
    branches:
      - dev
      - test
jobs:
  flutter_test:
    name: Run flutter test and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin' # Use 'temurin' for OpenJDK 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2 # will allow you to run flutter commands
        with:
          flutter-version: '3.7.0'
          channel: 'stable' # Use 'stable' channel for production-ready Flutter SDK

      - name: Install dependencies
        run: flutter pub get
      - name: Analyze code
        run: flutter analyze  

      - name: Run tests
        run: flutter test 

      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks

      - name: create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties:
          echo "storeFile=keystore.jks" >> android/key.properties
        
  build_ios:
    name: Build flutter IOS
    needs: [flutter_test]

    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin' # Use 'temurin' for OpenJDK 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2 # will allow you to run flutter commands
        with:
          channel: 'stable' # Use 'stable' channel for production-ready Flutter SDK
      - run: |
          flutter pub get
          flutter clean 
          flutter build ios --no-codesign
    
  build_appbundle:
    name: Build flutter Android App Bundle
    needs: [flutter_test]

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin' # Use 'temurin' for OpenJDK 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2 # will allow you to run flutter commands
        with:
          channel: 'stable' # Use 'stable' channel for production-ready Flutter SDK
      - run: |
          flutter pub get
          flutter clean 
          flutter build appbundle
  
  build_apk:
    name: Build flutter Android apk
    needs: [flutter_test]

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin' # Use 'temurin' for OpenJDK 17

      - name: Set up Flutter
        uses: subosito/flutter-action@v2 # will allow you to run flutter commands
        with:
          channel: 'stable' # Use 'stable' channel for production-ready Flutter SDK
      - run: |
          flutter pub get
          flutter clean 
          flutter build apk

      - name: Compress Archives and IPAs
        run: |
          cd build
          tar -czf ios_build.tar.gz ios
          